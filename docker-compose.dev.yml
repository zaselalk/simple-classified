services:
  # MongoDB service
  mongodb:
    image: mongo:7.0
    container_name: simple-classified-mongodb
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-classified}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - classified-network

  # Node.js application service
  app:
    build: .
    container_name: simple-classified-app
    restart: always
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DB_URL: ${DB_URL:-mongodb://classifieduser:userpassword123@mongodb:27017/classified}
      SECRET: ${SECRET}
      PORT: ${PORT:-3000}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_KEY: ${CLOUDINARY_KEY}
      CLOUDINARY_SECRET: ${CLOUDINARY_SECRET}
      CHOKIDAR_USEPOLLING: "true" # Fix for Windows file watching
      WATCHPACK_POLLING: "true"
    depends_on:
      - mongodb
    networks:
      - classified-network
    volumes:
      - ./:/app # Mount source code
      - /app/node_modules # Prevent overwriting node_modules
      - /app/.npm # Prevent npm cache issues
    command: npm run dev # Override CMD to use dev script

networks:
  classified-network:
    driver: bridge

volumes:
  mongodb_data:
